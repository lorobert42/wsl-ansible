---
- name: Include main.yml vars
  ansible.builtin.include_vars:
    file: main.yml
- name: Include setup.yml tasks
  ansible.builtin.include_tasks:
    file: setup.yml
- name: Install Docker packages
  ansible.builtin.package:
    name: "{{ docker_packages }}"
    state: "{{ docker_packages_state }}"
    allow_downgrade: true
  notify: Restart docker
  ignore_errors: "{{ ansible_check_mode }}"
- name: Install docker-compose-plugin
  ansible.builtin.package:
    name: "{{ docker_compose_package }}"
    state: "{{ docker_compose_package_state }}"
    allow_downgrade: true
  notify: Restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: docker_install_compose_plugin
- name: Ensure /etc/docker/ directory exists
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: '0755'
  when: docker_daemon_options.keys() | length > 0
- name: Ensure Docker is started and enabled at boot
  ansible.builtin.service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: docker_service_manage
- name: Ensure handlers are notified now to avoid firewall conflicts
  ansible.builtin.meta: flush_handlers
- name: Include docker-compose.yml tasks
  ansible.builtin.include_tasks: docker-compose.yml
  when: docker_install_compose
- name: Get docker group info using getent
  ansible.builtin.getent:
    database: group
    key: docker
    split: ':'
  when: docker_users | length > 0
- name: Check if there are any users to add to the docker group
  ansible.builtin.set_fact:
    at_least_one_user_to_modify: true
  when:
    - docker_users | length > 0
    - item not in ansible_facts.getent_group["docker"][2]
  with_items: "{{ docker_users }}"
- name: Include docker-users.yml tasks
  ansible.builtin.include_tasks: docker-users.yml
  when: at_least_one_user_to_modify is defined
